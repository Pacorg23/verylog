$date
	Sat Dec 31 21:00:54 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module registro_tb $end
$var wire 8 ! prueba [7:0] $end
$var wire 8 " salidaSiempre1 [7:0] $end
$var wire 8 # salidaSiempre0 [7:0] $end
$var wire 8 $ salida1 [7:0] $end
$var wire 8 % salida0 [7:0] $end
$var reg 1 & load0 $end
$var reg 1 ' load1 $end
$var reg 1 ( save0 $end
$var reg 1 ) save1 $end
$var reg 8 * saveValue0 [7:0] $end
$var reg 8 + saveValue1 [7:0] $end
$scope module A0 $end
$var wire 1 & load $end
$var wire 1 ( save $end
$var wire 8 , saveValue [7:0] $end
$var reg 8 - salida [7:0] $end
$var reg 8 . salidaSiempre [7:0] $end
$var reg 8 / valor [7:0] $end
$upscope $end
$scope module A1 $end
$var wire 1 ' load $end
$var wire 1 ) save $end
$var wire 8 0 saveValue [7:0] $end
$var reg 8 1 salida [7:0] $end
$var reg 8 2 salidaSiempre [7:0] $end
$var reg 8 3 valor [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 3
bx 2
bz 1
b0 0
b0 /
bx .
bz -
b0 ,
b0 +
b0 *
0)
0(
0'
0&
bz %
bz $
bx #
bx "
bz !
$end
#10
b10100 +
b10100 0
b10010100 *
b10010100 ,
#15
b10100 "
b10100 2
b10100 3
b10010100 #
b10010100 .
b10010100 /
1)
1(
#25
b10010100 !
b10010100 %
b10010100 -
b10010110 *
b10010110 ,
1&
0(
#30
bx0010100 !
b10100 $
b10100 1
b10110 +
b10110 0
1'
0)
#40
bz !
bz $
bz 1
bz %
bz -
0'
0&
#45
